{"version":3,"sources":["types/enums.ts","types/consts.ts","services/api/ice-and-fire.ts","components/characters/charactersTable.tsx","components/characters/genderSelect.tsx","components/characters/cultureSearch.tsx","components/characters/searchPanel.tsx","components/characters/pagination.tsx","screens/characters.tsx","components/houseDetails/goBackBtn.tsx","components/houseDetails/houseDetailsTable.tsx","screens/houseDetails.tsx","App.tsx","index.tsx"],"names":["GenderType","root","getCharacters","pageSize","gender","culture","pageNum","a","dataTableCharacters","url","genderType","Unknown","fetch","response","json","characters","linksHeaders","headers","get","links","parse","console","log","error","getHouseDetails","id","houseDetails","CharactersTable","props","charactersArray","useState","setCharacters","useEffect","colName","name","aliases","nameAndAliasesString","aliasesArray","length","unshift","filter","el","join","colAlive","born","died","bornYear","match","diedYear","yearsDiff","parseInt","colAllegiances","allegiances","allegiancesCount","map","i","getIdFromUrl","to","splitedUrl","split","colBooks","books","countOfBooks","rowItems","char","className","scope","GenderSelect","value","onChange","event","handleChangeGender","target","NotSelected","defaultValue","Male","Female","CultureSearch","type","placeholder","aria-label","aria-describedby","handleChangeCulture","currentTarget","SearchPanel","handleClickSearchCharacters","onClick","Pagination","handleChangePageSize","handleChangePageNum","disabled","prev","first","page","next","last","Characters","setLinks","setGender","setCulture","setPageSize","setPageNum","getAllData","fetchCharacters","pageNumber","GoBackBtn","HouseDetailsTable","region","coatOfArms","words","titles","seats","diedOut","overlord","cadetBranches","HouseDetails","setHouseDetails","useParams","houseDetailsId","details","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a2a2dae.chunk.js","sourcesContent":["export enum GenderType {\r\n  NotSelected = 0,\r\n  Male = 1,\r\n  Female = 2,\r\n  Unknown = 3,\r\n}\r\n","export const LINK = \"link\";\r\n","import { DataTableCharacters, House } from \"../../types/domain\";\r\nimport { GenderType } from \"../../types/enums\";\r\nimport { LINK } from \"../../types/consts\";\r\nimport parse, { Links } from \"parse-link-header\";\r\n\r\nconst root = \"https://www.anapioficeandfire.com/api\";\r\n\r\n//TODO fetch only theese data which are needed. Might be implemented by GraphQL?\r\n//TODO add log to server or file in catch blocks\r\n\r\nexport const getCharacters = async (\r\n  pageSize: number,\r\n  gender: GenderType,\r\n  culture: string,\r\n  pageNum: number\r\n): Promise<DataTableCharacters> => {\r\n  try {\r\n    let dataTableCharacters = {} as DataTableCharacters;\r\n    let url = `${root}/characters?page=${pageNum}&pageSize=${pageSize}`;\r\n\r\n    if (gender !== 0) {\r\n      const genderType =\r\n        gender !== GenderType.Unknown ? GenderType[gender] : \"\";\r\n      url = `${url}&gender=${genderType}`;\r\n    }\r\n    if (culture) {\r\n      url = `${url}&culture=${culture}`;\r\n    }\r\n\r\n    const response: Response = await fetch(url);\r\n    dataTableCharacters.characters = await response.json();\r\n\r\n    const linksHeaders = response.headers.get(LINK);\r\n    if (linksHeaders) {\r\n      let links: Links | null = parse(linksHeaders);\r\n      if (links) {\r\n        dataTableCharacters.links = links;\r\n      }\r\n    }\r\n\r\n    console.log(dataTableCharacters);\r\n    return dataTableCharacters;\r\n  } catch (ex) {\r\n    console.error(ex);\r\n    throw ex;\r\n  } finally {\r\n  }\r\n};\r\n\r\nexport const getHouseDetails = async (id: number): Promise<House> => {\r\n  try {\r\n    const url = `${root}/houses/${id}`;\r\n\r\n    const response: Response = await fetch(url);\r\n    const houseDetails: House = await response.json();\r\n    return houseDetails;\r\n  } catch (ex) {\r\n    console.error(ex);\r\n    throw ex;\r\n  } finally {\r\n  }\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { Character } from \"../../types/domain\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface CharactersTableProps {\r\n  charactersArray: Character[];\r\n}\r\n\r\nconst CharactersTable = (props: CharactersTableProps): JSX.Element => {\r\n  const { charactersArray } = props;\r\n  const [characters, setCharacters] = useState<Character[]>([]);\r\n\r\n  useEffect(() => {\r\n    setCharacters(charactersArray);\r\n  }, [charactersArray]);\r\n\r\n  const colName = (\r\n    name: string,\r\n    aliases: string[] | null | undefined\r\n  ): string => {\r\n    let nameAndAliasesString = \"\";\r\n    let aliasesArray = [] as string[] | null | undefined;\r\n\r\n    if (aliases && aliases.length > 0) {\r\n      aliasesArray = [...aliases];\r\n    }\r\n    if (name) {\r\n      aliasesArray?.unshift(name);\r\n    }\r\n    if (aliasesArray) {\r\n      var filtered = aliasesArray.filter(function (el) {\r\n        return el !== \"\";\r\n      });\r\n\r\n      nameAndAliasesString = filtered.join(\", \");\r\n    }\r\n\r\n    return nameAndAliasesString;\r\n  };\r\n\r\n  const colAlive = (born: string, died: string): string => {\r\n    //TODO Creating colAlive move to the top of component and execude it outside render method.\r\n    //TODO Execude this function right after the props come to component due to performance issue\r\n\r\n    let colAlive = \"\";\r\n    if (born && died) {\r\n      const bornYear = born.match(/\\d+/);\r\n      const diedYear = died.match(/\\d+/);\r\n\r\n      if (bornYear && bornYear.length > 0 && diedYear && diedYear.length > 0) {\r\n        const yearsDiff = parseInt(diedYear[0]) - parseInt(bornYear[0]);\r\n        colAlive = `No, died at ${yearsDiff} years old`;\r\n      }\r\n    } else if (born && !died) {\r\n      colAlive = \"Yes\";\r\n    } else {\r\n      //TODO implement edge cases\r\n      //TODO display info 'No data'\r\n    }\r\n\r\n    return colAlive;\r\n  };\r\n\r\n  const colAllegiances = (\r\n    allegiances?: string[] | null | undefined\r\n  ): JSX.Element => {\r\n    const allegiancesCount = allegiances?.length;\r\n    return (\r\n      <>\r\n        {allegiances?.map((a, i) => {\r\n          const id = getIdFromUrl(a);\r\n          const url = `/house-details/${id}`;\r\n          return (\r\n            <span key={`span_${id}`}>\r\n              <Link key={`link_${id}`} to={url}>\r\n                {id}\r\n              </Link>\r\n              {allegiancesCount !== i + 1 ? \", \" : null}\r\n            </span>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const getIdFromUrl = (url: string): number => {\r\n    const splitedUrl = url.split(\"/\");\r\n    const id = parseInt(splitedUrl[splitedUrl.length - 1]);\r\n    return id;\r\n  };\r\n\r\n  const colBooks = (books?: string[] | null | undefined): number => {\r\n    let countOfBooks = 0;\r\n    if (books) {\r\n      countOfBooks = books.length;\r\n    }\r\n\r\n    return countOfBooks;\r\n  };\r\n\r\n  const rowItems = characters.map((char) => {\r\n    const id = getIdFromUrl(char.url);\r\n    return (\r\n      <tr key={`row_key_url_${id}`}>\r\n        <td key={`col_key_name_${id}`}>{colName(char.name, char.aliases)}</td>\r\n        <td key={`col_key_alive_${id}`}>{colAlive(char.born, char.died)}</td>\r\n        <td key={`col_key_gender_${id}`}>\r\n          {char.gender ? char.gender : \"Unknown\"}\r\n        </td>\r\n        <td key={`col_key_culture_${id}`}>\r\n          {char.culture ? char.culture : \"Unknown\"}\r\n        </td>\r\n        <td key={`col_key_allegiances_${id}`}>\r\n          {colAllegiances(char.allegiances)}\r\n        </td>\r\n        <td key={`col_key_books_${id}`}>{colBooks(char.books)}</td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <table className=\"table table-sm table-hover\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Character</th>\r\n          <th scope=\"col\">Alive</th>\r\n          <th scope=\"col\">Gender</th>\r\n          <th scope=\"col\">Culture</th>\r\n          <th scope=\"col\">Allegiances</th>\r\n          <th scope=\"col\"># of Books</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{rowItems}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default CharactersTable;\r\n","import { GenderType } from \"../../types/enums\";\r\n\r\ninterface GenderSelectProps {\r\n  gender: GenderType;\r\n  handleChangeGender(gender: GenderType): void;\r\n}\r\n\r\nconst GenderSelect = (props: GenderSelectProps): JSX.Element => {\r\n  const handleChangeGender = (event: React.ChangeEvent<HTMLSelectElement>) => {\r\n    props.handleChangeGender(parseInt(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <label className=\"input-group-text\">Gender</label>\r\n      </div>\r\n      <select\r\n        className=\"custom-select\"\r\n        value={props.gender}\r\n        onChange={handleChangeGender}\r\n      >\r\n        <option\r\n          value={GenderType.NotSelected}\r\n          defaultValue={GenderType.NotSelected}\r\n        >\r\n          Select\r\n        </option>\r\n        <option value={GenderType.Male}>Male</option>\r\n        <option value={GenderType.Female}>Female</option>\r\n        <option value={GenderType.Unknown}>Unknown</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GenderSelect;\r\n","interface CultureSearchProps {\r\n  culture: string;\r\n  handleChangeCulture(culture: string): void;\r\n}\r\n\r\nconst CultureSearch = (props: CultureSearchProps): JSX.Element => {\r\n  const handleChangeCulture = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    props.handleChangeCulture(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-group mb-3\">\r\n      <div className=\"input-group-prepend\">\r\n        <label className=\"input-group-text\">Culture</label>\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Search\"\r\n        aria-label=\"Culture\"\r\n        aria-describedby=\"basic-addon1\"\r\n        value={props.culture}\r\n        onChange={handleChangeCulture}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CultureSearch;\r\n","import GenderSelect from \"../characters/genderSelect\";\r\nimport CultureSearch from \"../characters/cultureSearch\";\r\nimport { GenderType } from \"../../types/enums\";\r\n\r\ninterface SearchPanelProps {\r\n  gender: GenderType;\r\n  culture: string;\r\n  handleChangeGender(gender: GenderType): void;\r\n  handleChangeCulture(culture: string): void;\r\n  handleClickSearchCharacters(): Promise<void>;\r\n}\r\n\r\nconst SearchPanel = (props: SearchPanelProps): JSX.Element => {\r\n  const {\r\n    gender,\r\n    culture,\r\n    handleChangeGender,\r\n    handleChangeCulture,\r\n    handleClickSearchCharacters,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-2\">\r\n        <GenderSelect gender={gender} handleChangeGender={handleChangeGender} />\r\n      </div>\r\n      <div className=\"col-2\">\r\n        <CultureSearch\r\n          culture={culture}\r\n          handleChangeCulture={handleChangeCulture}\r\n        />\r\n      </div>\r\n      <div className=\"col-1\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-light\"\r\n          onClick={async () => await handleClickSearchCharacters()}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPanel;\r\n","import { Links } from \"parse-link-header\";\r\n\r\ninterface PaginationProps {\r\n  pageNum: number;\r\n  links: Links;\r\n  pageSize: number;\r\n  handleChangePageSize(\r\n    event: React.ChangeEvent<HTMLSelectElement>\r\n  ): Promise<void>;\r\n  handleChangePageNum(pageNum: string): Promise<void>;\r\n}\r\n\r\nconst Pagination = (props: PaginationProps): JSX.Element => {\r\n  const {\r\n    pageNum,\r\n    links,\r\n    pageSize,\r\n    handleChangePageSize,\r\n    handleChangePageNum,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-1\">\r\n        <button\r\n          disabled={!links.prev}\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          onClick={async () => await handleChangePageNum(links.first.page)}\r\n        >\r\n          first\r\n        </button>\r\n      </div>\r\n      <div className=\"col-1\">\r\n        <button\r\n          disabled={!links.prev}\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          onClick={async () => await handleChangePageNum(links.prev.page)}\r\n        >\r\n          prev\r\n        </button>\r\n      </div>\r\n      <div className=\"col-1\">\r\n        <span>{pageNum}</span>\r\n      </div>\r\n      <div className=\"col-1\">\r\n        <button\r\n          disabled={!links.next}\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          onClick={async () => await handleChangePageNum(links.next.page)}\r\n        >\r\n          next\r\n        </button>\r\n      </div>\r\n      <div className=\"col-1\">\r\n        <button\r\n          disabled={!links.next}\r\n          type=\"button\"\r\n          className=\"btn btn-secondary\"\r\n          onClick={async () => await handleChangePageNum(links.last.page)}\r\n        >\r\n          last\r\n        </button>\r\n      </div>\r\n      <div className=\"col-1\">\r\n        <div className=\"input-group mb-3\">\r\n          <select\r\n            className=\"custom-select\"\r\n            value={pageSize}\r\n            onChange={handleChangePageSize}\r\n          >\r\n            <option value=\"10\">10</option>\r\n            <option value=\"25\">25</option>\r\n            <option value=\"50\">50</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { getCharacters } from \"../services/api/ice-and-fire\";\r\nimport CharactersTable from \"../components/characters/charactersTable\";\r\nimport { Character } from \"../types/domain\";\r\nimport { GenderType } from \"../types/enums\";\r\nimport SearchPanel from \"../components/characters/searchPanel\";\r\nimport Pagination from \"../components/characters/pagination\";\r\nimport { Links } from \"parse-link-header\";\r\n\r\nconst Characters = (): JSX.Element => {\r\n  const [characters, setCharacters] = useState<Character[]>([]);\r\n  const [links, setLinks] = useState<Links>({});\r\n  const [gender, setGender] = useState<GenderType>(0);\r\n  const [culture, setCulture] = useState<string>(\"\");\r\n  const [pageSize, setPageSize] = useState<number>(25);\r\n  const [pageNum, setPageNum] = useState<number>(1);\r\n\r\n  //TODO implement Redux to prevent props drilling\r\n  //TODO add spinner when loading\r\n\r\n  useEffect(() => {\r\n    getAllData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pageSize]);\r\n\r\n  const getAllData = async (): Promise<void> => {\r\n    await fetchCharacters(pageSize, gender, culture);\r\n  };\r\n\r\n  const fetchCharacters = async (\r\n    pageSize: number,\r\n    gender: GenderType,\r\n    culture: string,\r\n    pageNum: number = 1\r\n  ): Promise<void> => {\r\n    //TODO add spinner when loading\r\n    const dataTableCharacters = await getCharacters(\r\n      pageSize,\r\n      gender,\r\n      culture,\r\n      pageNum\r\n    );\r\n    setCharacters(dataTableCharacters.characters);\r\n    setLinks(dataTableCharacters.links);\r\n  };\r\n\r\n  const handleChangeGender = (gender: GenderType): void => setGender(gender);\r\n\r\n  const handleChangeCulture = (culture: string): void => setCulture(culture);\r\n\r\n  const handleClickSearchCharacters = async (): Promise<void> =>\r\n    await fetchCharacters(pageSize, gender, culture);\r\n\r\n  const handleChangePageSize = async (\r\n    event: React.ChangeEvent<HTMLSelectElement>\r\n  ): Promise<void> => {\r\n    const pageSize = parseInt(event.target.value);\r\n    setPageSize(pageSize);\r\n\r\n    await fetchCharacters(pageSize, gender, culture);\r\n  };\r\n\r\n  const handleChangePageNum = async (pageNum: string): Promise<void> => {\r\n    const pageNumber = parseInt(pageNum);\r\n    setPageNum(pageNumber);\r\n    await fetchCharacters(pageSize, gender, culture, pageNumber);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <SearchPanel\r\n        gender={gender}\r\n        handleChangeGender={handleChangeGender}\r\n        culture={culture}\r\n        handleChangeCulture={handleChangeCulture}\r\n        handleClickSearchCharacters={handleClickSearchCharacters}\r\n      />\r\n      <CharactersTable charactersArray={characters} />\r\n      <Pagination\r\n        pageNum={pageNum}\r\n        links={links}\r\n        pageSize={pageSize}\r\n        handleChangePageSize={handleChangePageSize}\r\n        handleChangePageNum={handleChangePageNum}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst GoBackBtn = (): JSX.Element => {\r\n  return (\r\n    <Link to=\"/\">\r\n      <button type=\"button\" className=\"btn btn-light\">\r\n        Go back\r\n      </button>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default GoBackBtn;\r\n","import { House } from \"../../types/domain\";\r\n\r\ninterface HouseDetailsTableProps {\r\n  houseDetails: House;\r\n}\r\n\r\nconst HouseDetailsTable = (props: HouseDetailsTableProps): JSX.Element => {\r\n  const { houseDetails } = props;\r\n\r\n  return (\r\n    <table className=\"table table-sm table-hover\">\r\n      <tbody>\r\n        <tr>\r\n          <td>\r\n            <strong>Name of the House</strong>\r\n          </td>\r\n          <td>{houseDetails.name}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <strong>Region</strong>\r\n          </td>\r\n          <td>{houseDetails.region}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <strong>Coat of Arms</strong>\r\n          </td>\r\n          <td>{houseDetails.coatOfArms}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <strong>Words</strong>\r\n          </td>\r\n          <td>{houseDetails.words}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <strong>Titles</strong>\r\n          </td>\r\n          <td>{houseDetails.titles?.join(\", \")}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <strong>Seats</strong>\r\n          </td>\r\n          <td>{houseDetails.seats?.join(\", \")}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <strong>Has died out</strong>\r\n          </td>\r\n          <td>{houseDetails.diedOut ? \"Yes\" : \"No\"}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <strong>Has overlord</strong>\r\n          </td>\r\n          <td>{houseDetails.overlord ? \"Yes\" : \"No\"}</td>\r\n        </tr>\r\n        <tr>\r\n          <td>\r\n            <strong>Number of Cadet Branches</strong>\r\n          </td>\r\n          <td>{houseDetails.cadetBranches?.length}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default HouseDetailsTable;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getHouseDetails } from \"../services/api/ice-and-fire\";\r\nimport { House } from \"../types/domain\";\r\nimport GoBackBtn from \"../components/houseDetails/goBackBtn\";\r\nimport HouseDetailsTable from \"../components/houseDetails/houseDetailsTable\";\r\n\r\nconst HouseDetails = (): JSX.Element => {\r\n  const [houseDetails, setHouseDetails] = useState<House>({} as House);\r\n  const { id }: { id: string | undefined } = useParams();\r\n\r\n  useEffect(() => {\r\n    getAllData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [id]);\r\n\r\n  const getAllData = async (): Promise<void> => {\r\n    let houseDetailsId: number | undefined;\r\n    if (id) {\r\n      houseDetailsId = parseInt(id);\r\n      if (houseDetailsId > 0) {\r\n        const details = await getHouseDetails(houseDetailsId);\r\n        setHouseDetails(details);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <GoBackBtn />\r\n      <HouseDetailsTable houseDetails={houseDetails} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HouseDetails;\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Characters from \"./screens/characters\";\r\nimport HouseDetails from \"./screens/houseDetails\";\r\n\r\nconst App = (): JSX.Element => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Characters} />\r\n        <Route path=\"/house-details/:id\" component={HouseDetails} />\r\n        {/* TODO Add Error route */}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}